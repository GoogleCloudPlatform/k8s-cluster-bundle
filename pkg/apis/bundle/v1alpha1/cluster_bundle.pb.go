// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pkg/apis/bundle/v1alpha1/cluster_bundle.proto

package v1alpha1

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// The ClusterBundle is a packaging format for Kubernetes Components.
type ClusterBundle struct {
	// Required. Kubernetes API Version for the Bundle.
	// Must be bundle.gke.io/v1alpha1.
	ApiVersion string `protobuf:"bytes,1,opt,name=api_version,json=apiVersion,proto3" json:"api_version,omitempty"`
	// Required. The Kubernetes `kind` for this object. Must be 'ClusterBundle'.
	Kind string `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`
	// Required. Kubernetes ObjectMeta proto.
	Metadata *ObjectMeta `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Spec for the ClusterBundle, which specifies the intended Kubernetes cluster
	// configuration.
	Spec                 *ClusterBundleSpec `protobuf:"bytes,4,opt,name=spec,proto3" json:"spec,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ClusterBundle) Reset()         { *m = ClusterBundle{} }
func (m *ClusterBundle) String() string { return proto.CompactTextString(m) }
func (*ClusterBundle) ProtoMessage()    {}
func (*ClusterBundle) Descriptor() ([]byte, []int) {
	return fileDescriptor_6b30f666a9d42204, []int{0}
}

func (m *ClusterBundle) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClusterBundle.Unmarshal(m, b)
}
func (m *ClusterBundle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClusterBundle.Marshal(b, m, deterministic)
}
func (m *ClusterBundle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterBundle.Merge(m, src)
}
func (m *ClusterBundle) XXX_Size() int {
	return xxx_messageInfo_ClusterBundle.Size(m)
}
func (m *ClusterBundle) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterBundle.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterBundle proto.InternalMessageInfo

func (m *ClusterBundle) GetApiVersion() string {
	if m != nil {
		return m.ApiVersion
	}
	return ""
}

func (m *ClusterBundle) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *ClusterBundle) GetMetadata() *ObjectMeta {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *ClusterBundle) GetSpec() *ClusterBundleSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

// A spec object that wraps the Cluster Bundle.
type ClusterBundleSpec struct {
	// Name of the cluster bundle.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Version-string for this bundle. The version should be a SemVer string (see
	// https://semver.org/) of the form X.Y.Z (Major.Minor.Patch).  Generally
	// speaking, a major-version (changes should indicate breaking changes,
	// minor-versions should indicate backwards compatible features, and patch
	// changes should indicate backwords compatible. If there are any changes to
	// the bundle, then the version string must be incremented.
	//
	// If a bundle is versioned, then all its components must be versioned.
	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	// Kubernetes objects grouped into component packages and versioned together.
	// These could be applications or they could be some sort of supporting
	// object collection.
	Components []*ComponentPackage `protobuf:"bytes,3,rep,name=components,proto3" json:"components,omitempty"`
	// Cluster components that are specified externally as Files. The process of inlining
	// for a bundle reads component files into components, and so after
	// inlining, this list will be empty.
	ComponentFiles       []*File  `protobuf:"bytes,4,rep,name=component_files,json=componentFiles,proto3" json:"component_files,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClusterBundleSpec) Reset()         { *m = ClusterBundleSpec{} }
func (m *ClusterBundleSpec) String() string { return proto.CompactTextString(m) }
func (*ClusterBundleSpec) ProtoMessage()    {}
func (*ClusterBundleSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_6b30f666a9d42204, []int{1}
}

func (m *ClusterBundleSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClusterBundleSpec.Unmarshal(m, b)
}
func (m *ClusterBundleSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClusterBundleSpec.Marshal(b, m, deterministic)
}
func (m *ClusterBundleSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterBundleSpec.Merge(m, src)
}
func (m *ClusterBundleSpec) XXX_Size() int {
	return xxx_messageInfo_ClusterBundleSpec.Size(m)
}
func (m *ClusterBundleSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterBundleSpec.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterBundleSpec proto.InternalMessageInfo

func (m *ClusterBundleSpec) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ClusterBundleSpec) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *ClusterBundleSpec) GetComponents() []*ComponentPackage {
	if m != nil {
		return m.Components
	}
	return nil
}

func (m *ClusterBundleSpec) GetComponentFiles() []*File {
	if m != nil {
		return m.ComponentFiles
	}
	return nil
}

func init() {
	proto.RegisterType((*ClusterBundle)(nil), "pkg.apis.bundle.v1alpha1.ClusterBundle")
	proto.RegisterType((*ClusterBundleSpec)(nil), "pkg.apis.bundle.v1alpha1.ClusterBundleSpec")
}

func init() {
	proto.RegisterFile("pkg/apis/bundle/v1alpha1/cluster_bundle.proto", fileDescriptor_6b30f666a9d42204)
}

var fileDescriptor_6b30f666a9d42204 = []byte{
	// 362 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x52, 0x51, 0x4b, 0xf3, 0x30,
	0x14, 0xa5, 0xdf, 0xca, 0xa7, 0x66, 0xa8, 0x98, 0xa7, 0xb0, 0x07, 0x1d, 0xc3, 0x87, 0x31, 0x5d,
	0xeb, 0xe6, 0x8b, 0x6f, 0xca, 0x06, 0x0e, 0x86, 0xe2, 0xa8, 0xe0, 0x83, 0x2f, 0x25, 0x6d, 0xb3,
	0x2e, 0x36, 0x6d, 0x42, 0x93, 0xee, 0x2f, 0xfa, 0x0f, 0xfc, 0x3d, 0xd2, 0xa4, 0x9d, 0x8a, 0xc4,
	0xb7, 0xdc, 0x9b, 0x73, 0x4e, 0xce, 0xc9, 0xbd, 0x60, 0x2c, 0xb2, 0xd4, 0xc7, 0x82, 0x4a, 0x3f,
	0xaa, 0x8a, 0x84, 0x11, 0x7f, 0x3b, 0xc1, 0x4c, 0x6c, 0xf0, 0xc4, 0x8f, 0x59, 0x25, 0x15, 0x29,
	0x43, 0xd3, 0xf7, 0x44, 0xc9, 0x15, 0x87, 0x48, 0x64, 0xa9, 0x57, 0xc3, 0xbd, 0xa6, 0xdd, 0xc2,
	0x7b, 0x97, 0x56, 0x21, 0x53, 0x87, 0x31, 0xcf, 0x73, 0x5e, 0x18, 0x9d, 0xde, 0x95, 0xfd, 0x59,
	0x9e, 0x0b, 0x5e, 0x90, 0x42, 0x85, 0x02, 0xc7, 0x19, 0x4e, 0x9b, 0x97, 0x7b, 0x23, 0x2b, 0x83,
	0x47, 0x6f, 0x24, 0x56, 0x61, 0x4e, 0x14, 0x36, 0xd8, 0xc1, 0xbb, 0x03, 0x0e, 0xe7, 0xc6, 0xfe,
	0x4c, 0x83, 0xe1, 0x19, 0xe8, 0x62, 0x41, 0xc3, 0x2d, 0x29, 0x25, 0xe5, 0x05, 0x72, 0xfa, 0xce,
	0xf0, 0x20, 0x00, 0x58, 0xd0, 0x17, 0xd3, 0x81, 0x10, 0xb8, 0x19, 0x2d, 0x12, 0xf4, 0x4f, 0xdf,
	0xe8, 0x33, 0xbc, 0x03, 0xfb, 0xb5, 0x68, 0x82, 0x15, 0x46, 0x9d, 0xbe, 0x33, 0xec, 0x4e, 0xcf,
	0x3d, 0x5b, 0x7e, 0xef, 0x49, 0xbb, 0x78, 0x24, 0x0a, 0x07, 0x3b, 0x16, 0xbc, 0x05, 0xae, 0x14,
	0x24, 0x46, 0xae, 0x66, 0x5f, 0xd8, 0xd9, 0x3f, 0xdc, 0x3e, 0x0b, 0x12, 0x07, 0x9a, 0x38, 0xf8,
	0x70, 0xc0, 0xc9, 0xaf, 0xbb, 0xda, 0x6c, 0x81, 0x73, 0xd2, 0xc4, 0xd0, 0x67, 0x88, 0xc0, 0x5e,
	0x9b, 0xce, 0x64, 0x68, 0x4b, 0xb8, 0x04, 0x60, 0xf7, 0xa9, 0x12, 0x75, 0xfa, 0x9d, 0x61, 0x77,
	0x3a, 0xfa, 0xc3, 0x4a, 0x8b, 0x5d, 0x99, 0xff, 0x0f, 0xbe, 0xb1, 0xe1, 0x02, 0x1c, 0x7f, 0x0d,
	0x68, 0x4d, 0x19, 0x91, 0xc8, 0xd5, 0x82, 0xa7, 0x76, 0xc1, 0x7b, 0xca, 0x48, 0x70, 0xb4, 0xa3,
	0xd5, 0xa5, 0x9c, 0x3d, 0xbc, 0x2e, 0x53, 0xaa, 0x36, 0x55, 0xe4, 0xc5, 0x3c, 0xf7, 0x17, 0x9c,
	0xa7, 0x8c, 0xcc, 0x19, 0xaf, 0x92, 0x15, 0xc3, 0x6a, 0xcd, 0xcb, 0xdc, 0xcf, 0x6e, 0xe4, 0xb8,
	0xd9, 0xc1, 0x71, 0x33, 0x72, 0xdb, 0x0a, 0x44, 0xff, 0xf5, 0xdc, 0xaf, 0x3f, 0x03, 0x00, 0x00,
	0xff, 0xff, 0xcb, 0xc2, 0x52, 0xca, 0xce, 0x02, 0x00, 0x00,
}
