// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pkg/apis/bundle/v1alpha1/component_package.proto

package v1alpha1

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_struct "github.com/golang/protobuf/ptypes/struct"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Kubernetes objects grouped into cluster components and versioned together.
// These could be applications or they could be some sort of supporting
// collection of objects.
type ComponentPackage struct {
	// Required. Kubernetes API Version for the ComponentPackage type.
	// Must always be 'bundle.gke.io/v1alpha1'
	ApiVersion string `protobuf:"bytes,1,opt,name=apiVersion,proto3" json:"apiVersion,omitempty"`
	// Required. The Kubernetes `kind` for this object. Must be
	// 'ComponentPackage'.
	Kind string `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`
	// Kubernetes Metadata for the component
	Metadata *ObjectMeta `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Spec for the ComponentPackage.
	Spec                 *ComponentPackageSpec `protobuf:"bytes,4,opt,name=spec,proto3" json:"spec,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ComponentPackage) Reset()         { *m = ComponentPackage{} }
func (m *ComponentPackage) String() string { return proto.CompactTextString(m) }
func (*ComponentPackage) ProtoMessage()    {}
func (*ComponentPackage) Descriptor() ([]byte, []int) {
	return fileDescriptor_500109098fa4d83a, []int{0}
}

func (m *ComponentPackage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ComponentPackage.Unmarshal(m, b)
}
func (m *ComponentPackage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ComponentPackage.Marshal(b, m, deterministic)
}
func (m *ComponentPackage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ComponentPackage.Merge(m, src)
}
func (m *ComponentPackage) XXX_Size() int {
	return xxx_messageInfo_ComponentPackage.Size(m)
}
func (m *ComponentPackage) XXX_DiscardUnknown() {
	xxx_messageInfo_ComponentPackage.DiscardUnknown(m)
}

var xxx_messageInfo_ComponentPackage proto.InternalMessageInfo

func (m *ComponentPackage) GetApiVersion() string {
	if m != nil {
		return m.ApiVersion
	}
	return ""
}

func (m *ComponentPackage) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *ComponentPackage) GetMetadata() *ObjectMeta {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *ComponentPackage) GetSpec() *ComponentPackageSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

// ComponentPackageSpec represents the spec for the component.
type ComponentPackageSpec struct {
	// The name for this component. For example, 'etcd' or 'kube-proxy'.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Version-string for this component. The version should be a SemVer 2 string
	// (see https://semver.org/) of the form X.Y.Z (Major.Minor.Patch).  A
	// major-version changes should indicate breaking changes, minor-versions
	// should indicate backwards compatible features, and patch changes should
	// indicate backwards compatible. If there are any changes to the component,
	// then the version string must be incremented.
	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	// Structured Kubenetes objects that run as part of this app, whether on the
	// master, on the nodes, or in some other fashion.  These Kubernetes objects
	// are inlined and must be YAML/JSON compatible. Each must have `apiVersion`,
	// `kind`, and `metadata`.
	//
	// This is essentially equivalent to the Kubernetes `Unstructured` type.
	ClusterObjects []*_struct.Struct `protobuf:"bytes,3,rep,name=cluster_objects,json=clusterObjects,proto3" json:"cluster_objects,omitempty"`
	// Cluster objects that are specified via a File-URL. The process of inlining
	// a component turns cluster object files into cluster objects.
	// During the inline process, if the file is YAML-formatted and contains multiple
	// objects, the objects will be split into separate inline objects. In other
	// words, one cluster object file may result in multiple cluster objects.
	//
	// Each cluster object file must be parsable into a Struct: In other words,
	// it should be representable as either YAML or JSON.
	ClusterObjectFiles []*File `protobuf:"bytes,4,rep,name=cluster_object_files,json=clusterObjectFiles,proto3" json:"cluster_object_files,omitempty"`
	// Raw files represent arbitrary string data. Unlike cluster object files,
	// these files don't need to be parsable as YAML or JSON. So, during the
	// inline process, the data is inserted into a generated config map before
	// being added to the cluster objects. A ConfigMap is generated per-file,
	// with the metadata.name and the data-key both being set to the base-file
	// name. Thus, if the url is something like 'file://foo/bar/biff.txt', the
	// metadata.name and data-key will be 'biff.txt'.
	RawTextFiles         []*File  `protobuf:"bytes,5,rep,name=raw_text_files,json=rawTextFiles,proto3" json:"raw_text_files,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ComponentPackageSpec) Reset()         { *m = ComponentPackageSpec{} }
func (m *ComponentPackageSpec) String() string { return proto.CompactTextString(m) }
func (*ComponentPackageSpec) ProtoMessage()    {}
func (*ComponentPackageSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_500109098fa4d83a, []int{1}
}

func (m *ComponentPackageSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ComponentPackageSpec.Unmarshal(m, b)
}
func (m *ComponentPackageSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ComponentPackageSpec.Marshal(b, m, deterministic)
}
func (m *ComponentPackageSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ComponentPackageSpec.Merge(m, src)
}
func (m *ComponentPackageSpec) XXX_Size() int {
	return xxx_messageInfo_ComponentPackageSpec.Size(m)
}
func (m *ComponentPackageSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_ComponentPackageSpec.DiscardUnknown(m)
}

var xxx_messageInfo_ComponentPackageSpec proto.InternalMessageInfo

func (m *ComponentPackageSpec) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ComponentPackageSpec) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *ComponentPackageSpec) GetClusterObjects() []*_struct.Struct {
	if m != nil {
		return m.ClusterObjects
	}
	return nil
}

func (m *ComponentPackageSpec) GetClusterObjectFiles() []*File {
	if m != nil {
		return m.ClusterObjectFiles
	}
	return nil
}

func (m *ComponentPackageSpec) GetRawTextFiles() []*File {
	if m != nil {
		return m.RawTextFiles
	}
	return nil
}

func init() {
	proto.RegisterType((*ComponentPackage)(nil), "pkg.apis.bundle.v1alpha1.ComponentPackage")
	proto.RegisterType((*ComponentPackageSpec)(nil), "pkg.apis.bundle.v1alpha1.ComponentPackageSpec")
}

func init() {
	proto.RegisterFile("pkg/apis/bundle/v1alpha1/component_package.proto", fileDescriptor_500109098fa4d83a)
}

var fileDescriptor_500109098fa4d83a = []byte{
	// 400 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x52, 0x5d, 0x8b, 0xd3, 0x40,
	0x14, 0x25, 0xdb, 0xf8, 0x35, 0x2b, 0xab, 0x0c, 0x0b, 0x0e, 0x8b, 0x2c, 0xa5, 0xf8, 0x50, 0xc4,
	0xce, 0xd8, 0xfa, 0xe2, 0x63, 0x69, 0x45, 0x41, 0x14, 0x4b, 0x2a, 0x3e, 0xf8, 0x12, 0x26, 0x93,
	0xdb, 0x34, 0x66, 0x92, 0x19, 0x32, 0x93, 0xb6, 0xbf, 0xc6, 0x5f, 0xe4, 0x8f, 0x92, 0xcc, 0x24,
	0x62, 0xc5, 0xc0, 0xbe, 0xcd, 0xc7, 0x39, 0xe7, 0x9e, 0x73, 0xef, 0x45, 0xaf, 0x75, 0x91, 0x31,
	0xae, 0x73, 0xc3, 0x92, 0xa6, 0x4a, 0x25, 0xb0, 0xc3, 0x9c, 0x4b, 0xbd, 0xe7, 0x73, 0x26, 0x54,
	0xa9, 0x55, 0x05, 0x95, 0x8d, 0x35, 0x17, 0x05, 0xcf, 0x80, 0xea, 0x5a, 0x59, 0x85, 0x89, 0x2e,
	0x32, 0xda, 0x32, 0xa8, 0x67, 0xd0, 0x9e, 0x71, 0xf3, 0x3c, 0x53, 0x2a, 0x93, 0xc0, 0x1c, 0x2e,
	0x69, 0x76, 0xcc, 0xd8, 0xba, 0x11, 0xd6, 0xf3, 0x6e, 0x5e, 0x0d, 0x56, 0xf2, 0xf7, 0x58, 0xa8,
	0xb2, 0x54, 0x55, 0x87, 0x7e, 0x39, 0x88, 0x56, 0xc9, 0x0f, 0x10, 0x36, 0x2e, 0xc1, 0x72, 0x8f,
	0x9d, 0xfc, 0x0a, 0xd0, 0xd3, 0x75, 0xef, 0x76, 0xe3, 0xcd, 0xe2, 0x5b, 0x84, 0xb8, 0xce, 0xbf,
	0x41, 0x6d, 0x72, 0x55, 0x91, 0x60, 0x1c, 0x4c, 0x1f, 0x45, 0x7f, 0xbd, 0x60, 0x8c, 0xc2, 0x22,
	0xaf, 0x52, 0x72, 0xe1, 0x7e, 0xdc, 0x19, 0x2f, 0xd1, 0xc3, 0x56, 0x36, 0xe5, 0x96, 0x93, 0xd1,
	0x38, 0x98, 0x5e, 0x2e, 0x5e, 0xd0, 0xa1, 0xb4, 0xf4, 0x8b, 0xf3, 0xf1, 0x19, 0x2c, 0x8f, 0xfe,
	0xb0, 0xf0, 0x0a, 0x85, 0x46, 0x83, 0x20, 0xa1, 0x63, 0xd3, 0x61, 0xf6, 0xbf, 0x7e, 0xb7, 0x1a,
	0x44, 0xe4, 0xb8, 0x93, 0x9f, 0x17, 0xe8, 0xfa, 0x7f, 0xdf, 0xad, 0xe5, 0x8a, 0x97, 0xd0, 0x85,
	0x71, 0x67, 0x4c, 0xd0, 0x83, 0x43, 0x97, 0xd1, 0x27, 0xe9, 0xaf, 0x78, 0x89, 0x9e, 0x08, 0xd9,
	0x18, 0x0b, 0x75, 0xec, 0x5b, 0x66, 0xc8, 0x68, 0x3c, 0x9a, 0x5e, 0x2e, 0x9e, 0x51, 0x3f, 0x27,
	0xda, 0xcf, 0x89, 0x6e, 0xdd, 0x9c, 0xa2, 0xab, 0x0e, 0xef, 0x93, 0x19, 0xbc, 0x41, 0xd7, 0xe7,
	0x0a, 0xf1, 0x2e, 0x97, 0x60, 0x48, 0xe8, 0x64, 0x6e, 0x87, 0xc3, 0xbd, 0xcf, 0x25, 0x44, 0xf8,
	0x4c, 0xad, 0x7d, 0x32, 0xf8, 0x1d, 0xba, 0xaa, 0xf9, 0x31, 0xb6, 0x70, 0xea, 0xb5, 0xee, 0xdd,
	0x49, 0xeb, 0x71, 0xcd, 0x8f, 0x5f, 0xe1, 0xe4, 0x55, 0x56, 0x9f, 0xbe, 0x7f, 0xcc, 0x72, 0xbb,
	0x6f, 0x12, 0x2a, 0x54, 0xc9, 0x3e, 0xb8, 0x30, 0x6b, 0xa9, 0x9a, 0x74, 0x23, 0xb9, 0xdd, 0xa9,
	0xba, 0x64, 0xc5, 0x5b, 0x33, 0xeb, 0xca, 0xcf, 0xba, 0xfd, 0x19, 0xda, 0xa7, 0xe4, 0xbe, 0x6b,
	0xc3, 0x9b, 0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x3e, 0x8f, 0x6b, 0x8e, 0x0a, 0x03, 0x00, 0x00,
}
